<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="card1" elementType="Argument">
            <stringProp name="Argument.name">card1</stringProp>
            <stringProp name="Argument.value">4519037351329469</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="card2" elementType="Argument">
            <stringProp name="Argument.name">card2</stringProp>
            <stringProp name="Argument.value">4519031431561076</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="card3" elementType="Argument">
            <stringProp name="Argument.name">card3</stringProp>
            <stringProp name="Argument.value">4519031445055347</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="card4" elementType="Argument">
            <stringProp name="Argument.name">card4</stringProp>
            <stringProp name="Argument.value">4519031637175150</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="card5" elementType="Argument">
            <stringProp name="Argument.name">card5</stringProp>
            <stringProp name="Argument.value">4519031540634574</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="card6" elementType="Argument">
            <stringProp name="Argument.name">card6</stringProp>
            <stringProp name="Argument.value">4519031557357150</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="card7" elementType="Argument">
            <stringProp name="Argument.name">card7</stringProp>
            <stringProp name="Argument.value">4519037329775413</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="card8" elementType="Argument">
            <stringProp name="Argument.name">card8</stringProp>
            <stringProp name="Argument.value">4519031558357969</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="card9" elementType="Argument">
            <stringProp name="Argument.name">card9</stringProp>
            <stringProp name="Argument.value">4519037321023556</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="card10" elementType="Argument">
            <stringProp name="Argument.name">card10</stringProp>
            <stringProp name="Argument.value">4519031436580527</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
        <collectionProp name="UserParameters.names">
          <stringProp name="3355">id</stringProp>
        </collectionProp>
        <collectionProp name="UserParameters.thread_values">
          <collectionProp name="493027606">
            <stringProp name="-561498207">4519037351329469</stringProp>
          </collectionProp>
          <collectionProp name="1417636269">
            <stringProp name="-319814772">4519031431561076</stringProp>
          </collectionProp>
          <collectionProp name="1971030875">
            <stringProp name="534095670">4519031445055347</stringProp>
          </collectionProp>
          <collectionProp name="-1480274050">
            <stringProp name="1276825362">4519031637175150</stringProp>
          </collectionProp>
          <collectionProp name="1833578424">
            <stringProp name="-1246009817">4519031540634574</stringProp>
          </collectionProp>
          <collectionProp name="1203562160">
            <stringProp name="-1964563255">4519031557357150</stringProp>
          </collectionProp>
          <collectionProp name="-1363593940">
            <stringProp name="1429115120">4519037329775413</stringProp>
          </collectionProp>
          <collectionProp name="1428533828">
            <stringProp name="-1077051846">4519031558357969</stringProp>
          </collectionProp>
          <collectionProp name="2058941842">
            <stringProp name="-1581027188">4519037321023556</stringProp>
          </collectionProp>
          <collectionProp name="182020982">
            <stringProp name="-175441761">4519031436580527</stringProp>
          </collectionProp>
        </collectionProp>
        <boolProp name="UserParameters.per_iteration">false</boolProp>
      </UserParameters>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="OLB Test" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(THREAD,700)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(RAMP,3000)}</stringProp>
        <longProp name="ThreadGroup.start_time">1461706719000</longProp>
        <longProp name="ThreadGroup.end_time">1461706719000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${__P(DURATION, 180)}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">hosts.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">WLP_HOSTS</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">iv-creds</stringProp>
              <stringProp name="Header.value">Version=1, BAKs3DCCBwsMADCCBwUwggcBAgIJADAxMC0wGQIBAQIBAAICEAACAgCAAgECBAYDBAUGBwgMEDQ1MTkwMzczNTEzMjk0NjkwAAIBATCCBsMwgga/MCIMFEFVVEhFTlRJQ0FUSU9OX0xFVkVMMAowCAIBBAwBMQQAMCQMF0FaTl9DUkVEX0FVVEhOTUVDSF9JTkZPMAkwBwIBBAwABAAwLwwSQVpOX0NSRURfQVVUSFpOX0lEMBkwFwIBBAwQNDUxOTAzNzM1MTMyOTQ2OQQAMDMMFEFaTl9DUkVEX0FVVEhfTUVUSE9EMBswGQIBBAwSZXh0LWF1dGgtaW50ZXJmYWNlBAAwgY8MFUFaTl9DUkVEX0JST1dTRVJfSU5GTzB2MHQCAQQMbU1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS80My4wLjIzNTcuMTM0IFNhZmFyaS81MzcuMzYEADAmDBJBWk5fQ1JFRF9JUF9GQU1JTFkwEDAOAgEEDAdBRl9JTkVUBAAwKQwQQVpOX0NSRURfTUVDSF9JRDAVMBMCAQQMDElWX0xEQVBfVjMuMAQAMDMMHEFaTl9DUkVEX05FVFdPUktfQUREUkVTU19CSU4wEzARAgEEDAoweDhlZjU0NDAxBAAwNQwcQVpOX0NSRURfTkVUV09SS19BRERSRVNTX1NUUjAVMBMCAQQMDDE0Mi4yNDUuNjguMQQAMC0MGUFaTl9DUkVEX1BSSU5DSVBBTF9ET01BSU4wEDAOAgEEDAdEZWZhdWx0BAAwNAwXQVpOX0NSRURfUFJJTkNJUEFMX05BTUUwGTAXAgEEDBA0NTE5MDM3MzUxMzI5NDY5BAAwSAwXQVpOX0NSRURfUFJJTkNJUEFMX1VVSUQwLTArAgEEDCQwMDAwMDAwMS0wMDAwLTEwMDAtODAwMi0wMzA0MDUwNjA3MDgEADAtDBFBWk5fQ1JFRF9RT1BfSU5GTzAYMBYCAQQMD1NTSzogVExTVjEyOiAyRgQAMEQMFEFaTl9DUkVEX1JFR0lTVFJZX0lEMCwwKgIBBAwjY249NDUxOTAzNzM1MTMyOTQ2OSxjbj1FeHRlcm5hbFVzZXIEADAfDBJBWk5fQ1JFRF9VU0VSX0lORk8wCTAHAgEEDAAEADAnDBBBWk5fQ1JFRF9WRVJTSU9OMBMwEQIBBAwKMHgwMDAwMDkwMAQAMIIBGAwVQVpOX0NVU1RPTV9BVFRSSUJVVEVTMIH+MBoCAQQME3RhZ3ZhbHVlX0xPR09VVF9VUkwEADAiAgEEDBt0YWd2YWx1ZV9DTElFTlRfQ0FSRF9OVU1CRVIEADAeAgEEDBd0YWd2YWx1ZV9DTElFTlRfUFJPRklMRQQAMBgCAQQMEXRhZ3ZhbHVlX0xBTkdVQUdFBAAwFQIBBAwOdGFndmFsdWVfUEFSTTEEADAdAgEEDBZ0YWd2YWx1ZV9LRUVQQUxJVkVfVVJMBAAwGQIBBAwSdGFndmFsdWVfRVJST1JfVVJMBAAwFQIBBAwOdGFndmFsdWVfUEFSTTIEADAaAgEEDBN0YWd2YWx1ZV9SRVRVUk5fVVJMBAAwOAwbdGFndmFsdWVfQ0xJRU5UX0NBUkRfTlVNQkVSMBkwFwIBBAwQNDUxOTAzNzM1MTMyOTQ2OQQAMCUMF3RhZ3ZhbHVlX0NMSUVOVF9QUk9GSUxFMAowCAIBBAwBMAQAMDoMEnRhZ3ZhbHVlX0VSUk9SX1VSTDAkMCICAQQMG3MzdzA0NzE4aXJ1bGUuZGV2ZmcucmJjLmNvbQQAMD4MFnRhZ3ZhbHVlX0tFRVBBTElWRV9VUkwwJDAiAgEEDBtzM3cwNDcxOGlydWxlLmRldmZnLnJiYy5jb20EADAfDBF0YWd2YWx1ZV9MQU5HVUFHRTAKMAgCAQQMATAEADA1DBh0YWd2YWx1ZV9sb2dpbl91c2VyX25hbWUwGTAXAgEEDBA0NTE5MDM3MzUxMzI5NDY5BAAwOwwTdGFndmFsdWVfTE9HT1VUX1VSTDAkMCICAQQMG3MzdzA0NzE4aXJ1bGUuZGV2ZmcucmJjLmNvbQQAMBwMDnRhZ3ZhbHVlX1BBUk0xMAowCAIBBAwBMAQAMBwMDnRhZ3ZhbHVlX1BBUk0yMAowCAIBBAwBMAQAMDsME3RhZ3ZhbHVlX1JFVFVSTl9VUkwwJDAiAgEEDBtzM3cwNDcxOGlydWxlLmRldmZnLnJiYy5jb20EADBHDBZ0YWd2YWx1ZV9zZXNzaW9uX2luZGV4MC0wKwIBBAwkZjUxOTFhOGEtMGQ1Mi0xMWU2LTk3ZjEtMDBkMGM5ZGQ0NTE5BAA=</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">iv-user</stringProp>
              <stringProp name="Header.value">${id}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">iv_server_name</stringProp>
              <stringProp name="Header.value">3m00DigitalArchPOC-webseald-bbxsywwd01</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Cookie</stringProp>
              <stringProp name="Header.value">RTLB1=3544511886.49153.0000; __VCAP_ID__=0a6e89c366b741ba97f5924fb38cd978012f784672ab4efbbd337c6cf3576eeb; Ofms=1; TS015371d2=010dfc82295f74ea53baaf52e6848521d912487c4f3600304c7bab4e7cbbe54387b6e72334761ff112524c4864192e88b16d38e9f6f74e58d2fbbb7b65cf930730c35e44633cef1fdb2db6290906bd29c2e410a264</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Basic b2xidGFpdXNlcjpCMXVlTTF4RzBsZA==</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">client_card_number</stringProp>
              <stringProp name="Header.value">${id}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">language</stringProp>
              <stringProp name="Header.value">0</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">parm1</stringProp>
              <stringProp name="Header.value">0</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">parm2</stringProp>
              <stringProp name="Header.value">0</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">error_url</stringProp>
              <stringProp name="Header.value">rule.header.value.bank.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">return_url</stringProp>
              <stringProp name="Header.value">rule.header.value.bank.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">logout_url</stringProp>
              <stringProp name="Header.value">rule.header.value.bank.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">keepalive_url</stringProp>
              <stringProp name="Header.value">rule.header.value.bank.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">client_profile</stringProp>
              <stringProp name="Header.value">0</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__P(HOST,${WLP_HOSTS})}</stringProp>
          <stringProp name="HTTPSampler.port">${__P(PORT,80)}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout">1000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">10000</stringProp>
          <stringProp name="HTTPSampler.protocol">${__P(HTTP,http)}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/OLBServiceOrchestratorWeb/jaxrs/ServiceOrchestrator/AccountListAPI/${id}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="RespTimeGraph.interval">100</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
