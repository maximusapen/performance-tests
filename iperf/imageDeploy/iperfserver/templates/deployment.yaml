apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-deployment-{{ .Values.id }}"
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    generator: helm
    date: {{ now | htmlDate }}
spec:
  replicas: {{ .Values.podCount }}
  selector:
    matchLabels:
      app: iperfserver-{{ .Values.id }}
  template:
    metadata:
      name: {{ template "fullname" . }}
      labels:
        app: iperfserver-{{ .Values.id }}
        type: iperfserver
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: type
                operator: In
                values:
                - iperfserver
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: PERF_IPERF_ARGS
          valueFrom:
            configMapKeyRef:
              name: "{{ .Release.Name }}-config"
              key: PERF_IPERF_ARGS
        args: ["$(PERF_IPERF_ARGS)"]
      initContainers:
      - command:
        - sh
        - -c
        - sysctl -e -w fs.file-max=6000000;  sysctl -e -w fs.nr_open=10000000;  sysctl
          -e -w net.core.rmem_max=16777216;  sysctl -e -w net.core.wmem_max=16777216;  sysctl
          -e -w net.core.rmem_default=12582912;  sysctl -e -w net.core.wmem_default=12582912;  sysctl
          -e -w net.core.optmem_max=25165824;  sysctl -e -w net.core.netdev_max_backlog=262144;  sysctl
          -e -w net.core.somaxconn=32768;  sysctl -e -w net.core.rps_sock_flow_entries=32768;  sysctl
          -e -w net.ipv4.ip_local_port_range="1025 65535";  sysctl -e -w net.ipv4.tcp_rmem="8192
          262144 16777216";  sysctl -e -w net.ipv4.tcp_wmem="8192 262144 16777216";  sysctl
          -e -w net.ipv4.udp_rmem_min=16384;  sysctl -e -w net.ipv4.udp_wmem_min=16384;  sysctl
          -e -w net.ipv4.ip_no_pmtu_disc=0;  sysctl -e -w net.ipv4.route.flush=1;  sysctl
          -e -w net.ipv4.tcp_dsack=1;  sysctl -e -w net.ipv4.tcp_sack=1;  sysctl -e
          -w net.ipv4.tcp_fack=1;  sysctl -e -w net.ipv4.tcp_max_tw_buckets=1440000;  sysctl
          -e -w net.ipv4.tcp_tw_reuse=1;  sysctl
          -e -w net.ipv4.tcp_frto=0;  sysctl -e -w net.ipv4.tcp_syncookies=1;  sysctl
          -e -w net.ipv4.tcp_max_syn_backlog=32768;  sysctl -e -w net.ipv4.tcp_synack_retries=2;  sysctl
          -e -w net.ipv4.tcp_syn_retries=3;  sysctl -e -w net.ipv4.tcp_fin_timeout=5;  sysctl
          -e -w net.ipv4.tcp_retries2=5;  sysctl -e -w net.ipv4.tcp_no_metrics_save=1;  sysctl
          -e -w net.ipv4.tcp_moderate_rcvbuf=1;  sysctl -e -w net.ipv4.tcp_timestamps=1;  sysctl
          -e -w net.ipv4.tcp_keepalive_time=300;  sysctl -e -w net.ipv4.tcp_keepalive_intvl=30;  sysctl
          -e -w net.ipv4.tcp_keepalive_probes=6;  sysctl -e -w net.ipv4.tcp_slow_start_after_idle=0;  sysctl
          -e -w net.ipv4.tcp_window_scaling=1;  sysctl -e -w net.ipv4.tcp_low_latency=1;  sysctl
          -e -w net.ipv4.tcp_max_orphans=262144;  sysctl -e -w net.nf_conntrack_max=9145728;  sysctl
          -e -w net.netfilter.nf_conntrack_max=9145728;  sysctl -e -w net.netfilter.nf_conntrack_tcp_timeout_time_wait=10;  sysctl
          -e -w net.netfilter.nf_conntrack_tcp_timeout_fin_wait=10;  sysctl -e -w
          net.netfilter.nf_conntrack_tcp_timeout_close_wait=30;  sysctl -e -w net.netfilter.nf_conntrack_tcp_loose=1;  sysctl
          -e -w net.ipv4.tcp_rfc1337=1; exit 0;
        image: alpine:3.6
        imagePullPolicy: Always
        name: sysctl
        resources: {}
        securityContext:
          procMount: Default
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

---

apiVersion: v1
kind: Service
metadata:
  name: iperfserver-np-service-{{ .Values.id }}
spec:
  type: NodePort
  selector:
    app: iperfserver-{{ .Values.id }}
  ports:
   - protocol: TCP
     port: 5201
     nodePort: {{ .Values.port }}
     name: tcp

---

apiVersion: v1
kind: Service
metadata:
  name: iperfserver-lb-service-{{ .Values.id }}
  annotations:
    service.kubernetes.io/ibm-load-balancer-cloud-provider-ip-type: public
    service.kubernetes.io/ibm-load-balancer-cloud-provider-zone: "{{ .Values.lb.zone }}"
    service.kubernetes.io/ibm-load-balancer-cloud-provider-vlan: {{ .Values.lb.vlanID }}
    service.kubernetes.io/ibm-load-balancer-cloud-provider-enable-features: "ipvs"
spec:
  type: LoadBalancer
  selector:
    app: iperfserver-{{ .Values.id }}
  ports:
   - protocol: TCP
     port: {{ .Values.lb.port }}
     targetPort: 5201
  externalTrafficPolicy: Local
