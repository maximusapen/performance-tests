{{- if eq .Values.action "setup" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{$.Release.Name}}
  labels:
    app: {{ $.Chart.Name }}
    chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  replicas: {{ $.Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ $.Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ $.Chart.Name }}
        release: {{ $.Release.Name }}
        use : {{ $.Chart.Name }}-setup
        volume-size : "{{ .Values.pvc.storageSize }}B"
        volume-data-size: "{{ mul .Values.fileCount .Values.fileSize }}{{ .Values.fileSizeUnits}}"
    spec:
      initContainers:
      - name: install
        image: alpine
        command: ["/bin/sh","-c","i=1; while [ ${i} -le ${FILE_COUNT} ]; do fallocate -l ${FILE_SIZE} /var/perf-snapshot-ps/testdata-$i.bin; i=$(( i + 1 )); done" ]
        volumeMounts:
        - name: persistent-storage-mount
          mountPath: "/var/perf-snapshot-ps"
        env:
        - name: "FILE_SIZE"
          value: "{{ .Values.fileSize}}{{ .Values.fileSizeUnits }}"
        - name: "FILE_COUNT"
          value: "{{ $.Values.fileCount }}"
      containers:
      - name: {{ $.Chart.Name }}
        image: alpine
        command:
        - sleep
        - "86400"
        volumeMounts:
        - name: persistent-storage-mount
          mountPath: "/var/perf-snapshot-ps"
        env:
        - name: "METRICS_PREFIX"
          value: {{ $.Values.metricsPrefix }}
        - name: "METRICS_OS"
          value: {{ $.Values.metricsOS }}
        - name: "K8S_SERVER_VERSION"
          value: {{ $.Values.k8sVersion }}          
      volumes:
      - name: persistent-storage-mount
        persistentVolumeClaim:
          claimName: perf-pvc-cos
---
{{- end -}}
